*{
    margin: 0;
    padding: 0;
}

body{
    background-color: #477890;
    text-align: center;
}


.btn{
    padding: 1rem;
    font-size: 1.5rem;
    border-radius: 1rem;
    border: none;
    cursor: pointer;
}

.btn:hover{
    filter: brightness(90%);
}


/* GAME */

.container{
    height: 70vh;
    display: flex ;
    justify-content: center;
    align-items: center;


    /* border: 2px solid white; */
}

.game{
    height: 60vmin; 
    /* 1% of the view port smaller dimension */
    width: 60vmin;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    gap: 1.5vmin;


    /* border: 2px solid red; */
}

.box{
    height: 18vmin;
    width: 18vmin;
    border-radius: 1rem;
    border: none;
    box-shadow: 0 0 1rem rgba(0, 0, 0, 0.1);

    font-size: 8vmin;
    color: #8E3B46;
    background-color: #E1DD8F;
}

#reset-btn{
    background-color: #E0777D;
    color: ghostwhite;
    
}

/* GAME-MSG */

#new-game-btn{
    background-color: green;
    color: ghostwhite;
}

#msg{
    color: #E1DD8F;
    font-size: 5vmin;
}
/* CSS animation for sliding down */
@keyframes slideDown {
    0%{
        transform: translateY(-100%);
        opacity: 0;
    }
    100%{
        transform: translateY(0);
        opacity: 1;
    }
}

.msg-container{
    height: 100vmin;
    display: flex;
    justify-content: center;
    align-items: center;

    flex-direction: column;
    gap: 4rem;

    animation: slideDown 1s ease   forwards ;

}

.hide{
    display: none;
}

/* ///////////////////////////// */
@keyframes flicker {
    0%{filter: brightness(100%);}
    50%{filter: brightness(80%);}
    100%{filter: brightness(100%);}
}

.box.flicker{
    animation: flicker 0.3s ease ;
}

/* .box.flicker means that this property will only be applicable to those elements which has BOTH box && flicker classes simulateously */
/* initially there's no such element but on clicking the eventListener in app.js gets activated and adds the classList 'flicker' to the boxes */
